<?xml version="1.0" encoding="utf-8" ?>
<problem
   package = "unix.time"
   id = "time-diff-1"
   type = "standard">
  <statement language="ru_RU">
    <description>
<p>В некотором журнале записано время смены санитаров.
Определите продолжительность смены каждого санитара.</p>

<p>
В аргументе командной строки задается имя текстового файла,
который содержит временные отметки. Входной текстовый файл состоит
не менее чем из одной строки текста. Каждая строка текста
не превышает в длину 1000 символов и
содержит одну временную отметку в формате:
</p>
<pre>
YYYY/MM/DD hh:mm:ss
</pre>
<p>
перед YYYY, между DD и hh и после ss может находиться произвольное
число пробельных символов, большее 0. В остальном дата записывается точно в
указанном формате.
</p>
<p>
На стандартный поток вывода напечатайте последовательность
целых чисел, представляющую собой интервалы в секундах
между последовательными временными отметками во входном файле.
</p>

<p>Все временные отметки представимы 32-битным типом time_t.
Интервалы также представимы знаковыми 32-битными числами.</p>

<p>Учитывайте возможные переходы на летнее и зимнее время!</p>

<p>Обрабатывайте каждую временную отметку ровно один раз.</p>
    </description>
  </statement>
  <examples>
    <example>
      <input>2011/09/01 08:45:00
2011/09/01 10:20:00
2011/09/01 10:30:00
2011/12/01 23:32:00
2011/11/30 23:32:00
</input>
      <output>5700
600
7909320
-86400</output>
    </example>
  </examples>
  <review_notes>
<p>mktime в glibc использует
<a href="https://sourceware.org/git/?p=glibc.git;a=blob;f=time/mktime.c;h=494c89bf546e01072d6b939649d88c58174e2648;hb=refs/heads/release/2.35/master#l532">статическую переменную</a>
для угадывания dst.
При вызове mktime для структуры с tm_isdst = -1 эта переменная может изменяться.
Из-за этого могут выдавать неверный ответ (WA3) решения,
которые несколько раз вызывают mktime для одной временной отметки.</p>
  </review_notes>
<review_comments>
  <comment>"Магические числа" в коде. Используйте и документируйте константы.</comment>
<comment>Используйте форматные преобразования семейства scanf</comment>
<comment>Лучше, чтобы вспомогательная функция сразу возвращала значение time_t</comment>
<comment>mktime вызывается дважды для каждого входного значения</comment>
<comment>Используйте sizeof в fgets</comment>
<comment>Для небольших буферов фиксированного размера использовать динамическую память неэффективно</comment>
<comment>Считывание и преобразование времени лучше вынести в отдельную функцию для устранения дублирования кода</comment>
<comment>Используйте тип времени time_t</comment>
<comment>Приводить time_t к int небезопасно</comment>
<comment>Ключевое слово "const"  в Си _не задает_ константу</comment>
<comment>Нестандартный заголовочный файл</comment>
<comment>Обнуляйте переменную при определении</comment>
</review_comments>
</problem>
